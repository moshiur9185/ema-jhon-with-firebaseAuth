{"ast":null,"code":"import React from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from \"./firebase.config\";\nexport const initializeLoginFremwork = () => {\n  if (!firebase.apps.length) {\n    firebase.initializeApp(firebaseConfig);\n  } else {\n    firebase.app();\n  }\n};\nexport const handleGoogleSignIn = () => {\n  const googleProvider = new firebase.auth.GoogleAuthProvider();\n  firebase.auth().signInWithPopup(googleProvider).then(res => {\n    const {\n      displayName,\n      photoURL,\n      email\n    } = res.user;\n    const singedInUser = {\n      isSignedIn: true,\n      name: displayName,\n      email: email,\n      photo: photoURL\n    };\n    setUser(singedInUser); // console.log(displayName, email, photoURL, )\n  }).catch(err => {\n    console.log(err);\n    console.log(err.message);\n  });\n}; // facebook login\n\nexport const handleFbSingUp = () => {\n  const fbProvider = new firebase.auth.FacebookAuthProvider();\n  firebase.auth().signInWithPopup(fbProvider).then(res => {\n    //  @type {firebase.auth.OAuthCredential}\n    var credential = res.credential.accessToken;\n    var user = res.user;\n    console.log(user);\n  }).catch(error => {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message; // The email of the user's account used.\n\n    var email = error.email; // The firebase.auth.AuthCredential type that was used.\n\n    var credential = error.credential; // ...\n  });\n};\nexport const handleSignOut = () => {\n  firebase.auth().signOut().then(res => {\n    const signedOutUser = {\n      isSignedIn: false,\n      name: '',\n      email: '',\n      photo: '',\n      success: false,\n      error: ''\n    };\n    setUser(signedOutUser);\n  }).catch(err => {});\n};\nexport const createUserWithEmailAndPassword = () => {\n  firebase.auth().createUserWithEmailAndPassword(user.email, user.password).then(res => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = '';\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    updateUserName(user.name);\n  }).catch(error => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n  });\n};\nexport const signInWithEmailAndPassword = () => {\n  firebase.auth().signInWithEmailAndPassword(user.email, user.password).then(res => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = '';\n    newUserInfo.success = true;\n    setUser(newUserInfo);\n    setLoggedInUser(newUserInfo);\n    history.replace(from);\n    console.log('sign in user info', res.user);\n  }).catch(error => {\n    const newUserInfo = { ...user\n    };\n    newUserInfo.error = error.message;\n    newUserInfo.success = false;\n    setUser(newUserInfo);\n  });\n};\n\nconst updateUserName = name => {\n  const user = firebase.auth().currentUser;\n  user.updateProfile({\n    displayName: name\n  }).then(res => {\n    // Update successful.\\\n    console.log('Updated successfully');\n  }).catch(error => {\n    // An error happened.\n    console.log(error);\n  });\n};","map":{"version":3,"sources":["/home/moshiur/Desktop/Web Development/projects/ema-john-router/src/componets/LoginManager/LoginManager.js"],"names":["React","firebase","firebaseConfig","initializeLoginFremwork","apps","length","initializeApp","app","handleGoogleSignIn","googleProvider","auth","GoogleAuthProvider","signInWithPopup","then","res","displayName","photoURL","email","user","singedInUser","isSignedIn","name","photo","setUser","catch","err","console","log","message","handleFbSingUp","fbProvider","FacebookAuthProvider","credential","accessToken","error","errorCode","code","errorMessage","handleSignOut","signOut","signedOutUser","success","createUserWithEmailAndPassword","password","newUserInfo","updateUserName","signInWithEmailAndPassword","setLoggedInUser","history","replace","from","currentUser","updateProfile"],"mappings":"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","sourcesContent":["import React from 'react';\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport firebaseConfig from \"./firebase.config\";\n\nexport const initializeLoginFremwork = () => {\n    if (!firebase.apps.length) {\n        firebase.initializeApp(firebaseConfig);\n     }else {\n        firebase.app(); \n     }\n}\nexport const handleGoogleSignIn =()=>{\n    const googleProvider = new firebase.auth.GoogleAuthProvider();\n    firebase.auth().signInWithPopup(googleProvider)\n    .then(res=>{\n      const {displayName, photoURL, email} =res.user;\n      const singedInUser = {\n        isSignedIn : true,\n        name : displayName,\n        email : email,\n        photo : photoURL\n      }\n      setUser(singedInUser);\n      // console.log(displayName, email, photoURL, )\n    })\n    .catch((err)=>{\n      console.log(err);\n      console.log(err.message)\n    })\n  }\n\n// facebook login\n  export const handleFbSingUp = () => {\n    const fbProvider = new firebase.auth.FacebookAuthProvider();\n    firebase.auth().signInWithPopup(fbProvider)\n    .then(res => {\n      //  @type {firebase.auth.OAuthCredential}\n      var credential = res.credential.accessToken;\n      var user = res.user;\n      console.log(user);\n    })\n    .catch((error) => {\n      // Handle Errors here.\n      var errorCode = error.code;\n      var errorMessage = error.message;\n      // The email of the user's account used.\n      var email = error.email;\n      // The firebase.auth.AuthCredential type that was used.\n      var credential = error.credential;\n  \n      // ...\n    });\n   \n  }\n  export const handleSignOut =()=>{\n    firebase.auth().signOut()\n    .then(res =>{\n      const signedOutUser = {\n        isSignedIn : false,\n        name:'',\n        email:'',\n        photo: '',\n        success: false,\n        error: ''\n      }\n      setUser(signedOutUser);\n    })\n    .catch((err) =>{\n    })\n  }\n\nexport const createUserWithEmailAndPassword = () => {\n    firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n      .then((res) => {\n        const newUserInfo = {...user};\n        newUserInfo.error = '';\n        newUserInfo.success = true;\n        setUser(newUserInfo);\n        updateUserName(user.name);\n      })\n      .catch((error) => { \n        const newUserInfo = {...user};\n        newUserInfo.error = error.message;\n        newUserInfo.success = false;\n        setUser(newUserInfo);\n      });\n}\n\nexport const signInWithEmailAndPassword =()=>{\n    firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n      .then((res) => {\n        const newUserInfo = {...user};\n        newUserInfo.error = '';\n        newUserInfo.success = true;\n        setUser(newUserInfo);\n        setLoggedInUser(newUserInfo);\n        history.replace(from);\n        console.log( 'sign in user info', res.user);\n      })\n      .catch((error) => {\n        const newUserInfo = {...user};\n        newUserInfo.error = error.message;\n        newUserInfo.success = false;\n        setUser(newUserInfo);\n      });\n}\nconst updateUserName = name => {\n    const user = firebase.auth().currentUser;\n  \n      user.updateProfile({\n        displayName: name,\n      }).then(res => {\n        // Update successful.\\\n        console.log('Updated successfully')\n      }).catch(error=> {\n        // An error happened.\n        console.log(error)\n      });\n  }"]},"metadata":{},"sourceType":"module"}