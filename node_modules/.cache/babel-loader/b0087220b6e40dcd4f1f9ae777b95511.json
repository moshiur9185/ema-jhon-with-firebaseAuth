{"ast":null,"code":"var _jsxFileName = \"/home/moshiur/Desktop/Web Development/projects/ema-john-router/src/componets/Login/Login.js\";\n// import React, { useState } from 'react';\n// import firebase from 'firebase/app'\n// import \"firebase/auth\"\n// import firebaseConfig from './firebase.config';\n// firebase.initializeApp(firebaseConfig);\n// const Login = () => {\n//     const [newUser, setNewUser] = useState(false);\n//     const [user, setUser] = useState({\n//         isSignedIn: false,\n//         name: '',\n//         email: '',\n//         password: '',\n//         photo: ''\n//     })\n//     const googleProvider = new firebase.auth.GoogleAuthProvider();\n//     const fbProvider = new firebase.auth.FacebookAuthProvider();\n//     const handleSignIn = () => {\n//         firebase.auth().signInWithPopup(googleProvider)\n//             .then(res => {\n//                 const { displayName, photoURL, email } = res.user;\n//                 const signedInUser = {\n//                     isSignedIn: true,\n//                     name: displayName,\n//                     email: email,\n//                     photo: photoURL\n//                 };\n//                 setUser(signedInUser);\n//             })\n//             .catch(err => {\n//                 console.log(err);\n//                 console.log(err.message);\n//             })\n//     }\n//     const handleFbSignIn = () => {\n//         firebase.auth().signInWithPopup(fbProvider).then(function (result) {\n//             var token = result.credential.accessToken;\n//             var user = result.user;\n//             console.log('fb user after sign in', user);\n//         }).catch(function (error) {\n//             var errorCode = error.code;\n//             var errorMessage = error.message;\n//             console.log(errorCode, errorMessage)\n//         });\n//     }\n//     const handleSignOut = () => {\n//         firebase.auth().signOut()\n//             .then(res => {\n//                 const signedOutUser = {\n//                     isSignedIn: false,\n//                     name: '',\n//                     email: '',\n//                     photo: '',\n//                     error: '',\n//                     success: false\n//                 }\n//                 setUser(signedOutUser);\n//             }).catch(err => {\n//                 // An error happened.\n//             });\n//     }\n//     const handleBlur = (e) => {\n//         let isFieldValid = true;\n//         if (e.target.name === 'email') {\n//             isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\n//         }\n//         if (e.target.name === 'password') {\n//             const isPasswordValid = e.target.value.length > 6;\n//             const passwordHasNumber = /\\d{1}/.test(e.target.value);\n//             isFieldValid = isPasswordValid && passwordHasNumber;\n//         }\n//         if (isFieldValid) {\n//             const newUserInfo = { ...user };\n//             newUserInfo[e.target.name] = e.target.value;\n//             setUser(newUserInfo);\n//         }\n//     }\n//     const handleSubmit = (e) => {\n//         if (newUser && user.email && user.password) {\n//             firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\n//                 .then(res => {\n//                     const newUserInfo = { ...user };\n//                     newUserInfo.error = '';\n//                     newUserInfo.success = true;\n//                     setUser(newUserInfo);\n//                     updateUserName(user.name);\n//                 })\n//                 .catch(error => {\n//                     const newUserInfo = { ...user };\n//                     newUserInfo.error = error.message;\n//                     newUserInfo.success = false;\n//                     setUser(newUserInfo);\n//                 });\n//         }\n//         if (!newUser && user.email && user.password) {\n//             firebase.auth().signInWithEmailAndPassword(user.email, user.password)\n//                 .then(res => {\n//                     const newUserInfo = { ...user };\n//                     newUserInfo.error = '';\n//                     newUserInfo.success = true;\n//                     setUser(newUserInfo);\n//                     console.log('sign in user info', res.user);\n//                 })\n//                 .catch(function (error) {\n//                     const newUserInfo = { ...user };\n//                     newUserInfo.error = error.message;\n//                     newUserInfo.success = false;\n//                     setUser(newUserInfo);\n//                 });\n//         }\n//         e.preventDefault();\n//     }\n//     const updateUserName = name => {\n//         const user = firebase.auth().currentUser;\n//         user.updateProfile({\n//             displayName: name\n//         }).then(function () {\n//             console.log('user name updated successfully')\n//         }).catch(function (error) {\n//             console.log(error)\n//         });\n//     }\n//     return (\n//         <div className=\"App\">\n//             { user.isSignedIn ? <button onClick={handleSignOut}>Sign Out</button> :\n//                 <button onClick={handleSignIn}>Sign In</button>\n//             }\n//             <br />\n//             <button onClick={handleFbSignIn}>Sign in using Facebook</button>\n//             {\n//                 user.isSignedIn && <div>\n//                     <p>Welcome, {user.name}!</p>\n//                     <p>Your email: {user.email}</p>\n//                     <img src={user.photo} alt=\"\" />\n//                 </div>\n//             }\n//             <h1>Our own Authentication</h1>\n//             <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\" />\n//             <label htmlFor=\"newUser\">New User Sign up</label>\n//             <form onSubmit={handleSubmit}>\n//                 {newUser && <input name=\"name\" type=\"text\" onBlur={handleBlur} placeholder=\"Your name\" />}\n//                 <br />\n//                 <input type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"Your Email address\" required />\n//                 <br />\n//                 <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Your Password\" required />\n//                 <br />\n//                 <input type=\"submit\" value={newUser ? 'Sign up' : 'Sign in'} />\n//             </form>\n//             <p style={{ color: 'red' }}>{user.error}</p>\n//             { user.success && <p style={{ color: 'green' }}>User {newUser ? 'created' : 'Logged In'} successfully</p>}\n//         </div>\n//     );\n// };\n// export default Login;\nimport React from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"This is log in\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/home/moshiur/Desktop/Web Development/projects/ema-john-router/src/componets/Login/Login.js"],"names":["React","Login"],"mappingskB,OAAlB;;;AAEA,MAAMC,KAAK,GAAG,MAAM;AAChB,sBACI;AAAA,2BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH,CAND;;KAAMA,K;AAQN,eAAeA,KAAf","sourcesContent":["// import React, { useState } from 'react';\r\n// import firebase from 'firebase/app'\r\n// import \"firebase/auth\"\r\n// import firebaseConfig from './firebase.config';\r\n\r\n// firebase.initializeApp(firebaseConfig);\r\n\r\n// const Login = () => {\r\n//     const [newUser, setNewUser] = useState(false);\r\n//     const [user, setUser] = useState({\r\n//         isSignedIn: false,\r\n//         name: '',\r\n//         email: '',\r\n//         password: '',\r\n//         photo: ''\r\n//     })\r\n//     const googleProvider = new firebase.auth.GoogleAuthProvider();\r\n//     const fbProvider = new firebase.auth.FacebookAuthProvider();\r\n//     const handleSignIn = () => {\r\n//         firebase.auth().signInWithPopup(googleProvider)\r\n//             .then(res => {\r\n//                 const { displayName, photoURL, email } = res.user;\r\n//                 const signedInUser = {\r\n//                     isSignedIn: true,\r\n//                     name: displayName,\r\n//                     email: email,\r\n//                     photo: photoURL\r\n//                 };\r\n//                 setUser(signedInUser);\r\n//             })\r\n//             .catch(err => {\r\n//                 console.log(err);\r\n//                 console.log(err.message);\r\n//             })\r\n//     }\r\n\r\n//     const handleFbSignIn = () => {\r\n//         firebase.auth().signInWithPopup(fbProvider).then(function (result) {\r\n//             var token = result.credential.accessToken;\r\n//             var user = result.user;\r\n//             console.log('fb user after sign in', user);\r\n//         }).catch(function (error) {\r\n//             var errorCode = error.code;\r\n//             var errorMessage = error.message;\r\n//             console.log(errorCode, errorMessage)\r\n//         });\r\n//     }\r\n\r\n//     const handleSignOut = () => {\r\n//         firebase.auth().signOut()\r\n//             .then(res => {\r\n//                 const signedOutUser = {\r\n//                     isSignedIn: false,\r\n//                     name: '',\r\n//                     email: '',\r\n//                     photo: '',\r\n//                     error: '',\r\n//                     success: false\r\n//                 }\r\n//                 setUser(signedOutUser);\r\n//             }).catch(err => {\r\n//                 // An error happened.\r\n//             });\r\n//     }\r\n\r\n//     const handleBlur = (e) => {\r\n//         let isFieldValid = true;\r\n//         if (e.target.name === 'email') {\r\n//             isFieldValid = /\\S+@\\S+\\.\\S+/.test(e.target.value);\r\n//         }\r\n//         if (e.target.name === 'password') {\r\n//             const isPasswordValid = e.target.value.length > 6;\r\n//             const passwordHasNumber = /\\d{1}/.test(e.target.value);\r\n//             isFieldValid = isPasswordValid && passwordHasNumber;\r\n//         }\r\n//         if (isFieldValid) {\r\n//             const newUserInfo = { ...user };\r\n//             newUserInfo[e.target.name] = e.target.value;\r\n//             setUser(newUserInfo);\r\n//         }\r\n//     }\r\n//     const handleSubmit = (e) => {\r\n//         if (newUser && user.email && user.password) {\r\n//             firebase.auth().createUserWithEmailAndPassword(user.email, user.password)\r\n//                 .then(res => {\r\n//                     const newUserInfo = { ...user };\r\n//                     newUserInfo.error = '';\r\n//                     newUserInfo.success = true;\r\n//                     setUser(newUserInfo);\r\n//                     updateUserName(user.name);\r\n//                 })\r\n//                 .catch(error => {\r\n//                     const newUserInfo = { ...user };\r\n//                     newUserInfo.error = error.message;\r\n//                     newUserInfo.success = false;\r\n//                     setUser(newUserInfo);\r\n//                 });\r\n//         }\r\n\r\n//         if (!newUser && user.email && user.password) {\r\n//             firebase.auth().signInWithEmailAndPassword(user.email, user.password)\r\n//                 .then(res => {\r\n//                     const newUserInfo = { ...user };\r\n//                     newUserInfo.error = '';\r\n//                     newUserInfo.success = true;\r\n//                     setUser(newUserInfo);\r\n//                     console.log('sign in user info', res.user);\r\n//                 })\r\n//                 .catch(function (error) {\r\n//                     const newUserInfo = { ...user };\r\n//                     newUserInfo.error = error.message;\r\n//                     newUserInfo.success = false;\r\n//                     setUser(newUserInfo);\r\n//                 });\r\n//         }\r\n\r\n//         e.preventDefault();\r\n//     }\r\n\r\n//     const updateUserName = name => {\r\n//         const user = firebase.auth().currentUser;\r\n\r\n//         user.updateProfile({\r\n//             displayName: name\r\n//         }).then(function () {\r\n//             console.log('user name updated successfully')\r\n//         }).catch(function (error) {\r\n//             console.log(error)\r\n//         });\r\n//     }\r\n\r\n//     return (\r\n//         <div className=\"App\">\r\n//             { user.isSignedIn ? <button onClick={handleSignOut}>Sign Out</button> :\r\n//                 <button onClick={handleSignIn}>Sign In</button>\r\n//             }\r\n//             <br />\r\n//             <button onClick={handleFbSignIn}>Sign in using Facebook</button>\r\n//             {\r\n//                 user.isSignedIn && <div>\r\n//                     <p>Welcome, {user.name}!</p>\r\n//                     <p>Your email: {user.email}</p>\r\n//                     <img src={user.photo} alt=\"\" />\r\n//                 </div>\r\n//             }\r\n\r\n//             <h1>Our own Authentication</h1>\r\n//             <input type=\"checkbox\" onChange={() => setNewUser(!newUser)} name=\"newUser\" id=\"\" />\r\n//             <label htmlFor=\"newUser\">New User Sign up</label>\r\n//             <form onSubmit={handleSubmit}>\r\n//                 {newUser && <input name=\"name\" type=\"text\" onBlur={handleBlur} placeholder=\"Your name\" />}\r\n//                 <br />\r\n//                 <input type=\"text\" name=\"email\" onBlur={handleBlur} placeholder=\"Your Email address\" required />\r\n//                 <br />\r\n//                 <input type=\"password\" name=\"password\" onBlur={handleBlur} placeholder=\"Your Password\" required />\r\n//                 <br />\r\n//                 <input type=\"submit\" value={newUser ? 'Sign up' : 'Sign in'} />\r\n//             </form>\r\n//             <p style={{ color: 'red' }}>{user.error}</p>\r\n//             { user.success && <p style={{ color: 'green' }}>User {newUser ? 'created' : 'Logged In'} successfully</p>}\r\n//         </div>\r\n//     );\r\n// };\r\n\r\n// export default Login;\r\nimport React from 'react';\r\n\r\nconst Login = () => {\r\n    return (\r\n        <div>\r\n            <h1>This is log in</h1>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Login;"]},"metadata":{},"sourceType":"module"}